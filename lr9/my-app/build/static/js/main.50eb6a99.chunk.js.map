{"version":3,"sources":["components/AddExpenseForm.js","components/Expenses.js","App.js","reportWebVitals.js","index.js"],"names":["AddExpenseForm","_ref","onAddExpense","description","setDescription","React","useState","amount","setAmount","createElement","onSubmit","event","preventDefault","trim","newExpense","parseFloat","type","placeholder","value","onChange","target","ExpenseDate","props","ExpenseItem","className","date","title","Expenses","expenses","setExpenses","prevExpenses","length","map","expense","index","key","Date","App","id","ExpensesList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"kLAoDeA,MAlDf,SAAuBC,GAAoB,IAAnB,aAAEC,GAAcD,EACtC,MAAOE,EAAaC,GAAkBC,IAAMC,SAAS,KAC9CC,EAAQC,GAAaH,IAAMC,SAAS,IA6B3C,OACED,IAAAI,cAAA,QAAMC,SApBcC,IAGpB,GAFAA,EAAMC,kBAEDT,EAAYU,SAAWN,EAAOM,OAAQ,OAG3C,MAAMC,EAAa,CACjBX,cACAI,OAAQQ,WAAWR,IAIrBL,EAAaY,GAGbV,EAAe,IACfI,EAAU,MAKRH,IAAAI,cAAA,SACEO,KAAK,OACLC,YAAY,2BACZC,MAAOf,EACPgB,SAjC2BR,IAC/BP,EAAeO,EAAMS,OAAOF,UAkC1Bb,IAAAI,cAAA,SACEO,KAAK,SACLC,YAAY,2BACZC,MAAOX,EACPY,SAnCsBR,IAC1BH,EAAUG,EAAMS,OAAOF,UAoCrBb,IAAAI,cAAA,UAAQO,KAAK,UAAS,qFC5C5B,MAAMK,EAAeC,MAOfC,EAAeD,GAEjBjB,IAAAI,cAAA,OAAKe,UAAU,gBAAe,IAC5BnB,IAAAI,cAACY,EAAW,CAACI,KAAMH,EAAMG,OACzBpB,IAAAI,cAAA,OAAKe,UAAU,6BACbnB,IAAAI,cAAA,UAAKa,EAAMI,OACXrB,IAAAI,cAAA,OAAKe,UAAU,uBAAsB,IAAEF,EAAMf,UA+BtCoB,MAxBEA,KACf,MAAOC,EAAUC,GAAevB,mBAAS,IAMzC,OACED,IAAAI,cAAA,WACEJ,IAAAI,cAAA,UAAI,YACJJ,IAAAI,cAACT,EAAc,CAACE,aAPOY,IACzBe,EAAYC,GAAgB,IAAIA,EAAchB,OAOvB,IAApBc,EAASG,QAAgB1B,IAAAI,cAAA,SAAG,sBAC5BmB,EAASI,IAAI,CAACC,EAASC,IACtB7B,IAAAI,cAACc,EAAW,CACVY,IAAKD,EACLT,KAAM,IAAIW,KAAKH,EAAQR,MACvBC,MAAOO,EAAQ9B,YACfI,OAAQ0B,EAAQ1B,YCEX8B,MArCf,WAEE,MAAMT,EAAW,CACf,CACEU,GAAI,KACJZ,MAAO,eACPnB,OAAQ,MACRkB,KAAM,IAAIW,KAAK,KAAM,EAAG,KAE1B,CACEE,GAAI,KACJZ,MAAO,SACPnB,OAAQ,OACRkB,KAAM,IAAIW,KAAK,KAAM,EAAG,KAE1B,CACEE,GAAI,KACJZ,MAAO,gBACPnB,OAAQ,OACRkB,KAAM,IAAIW,KAAK,KAAM,EAAG,KAE1B,CACEE,GAAI,KACJZ,MAAO,oBACPnB,OAAQ,IACRkB,KAAM,IAAIW,KAAK,KAAM,EAAG,MAI5B,OACE/B,IAAAI,cAAA,WACEJ,IAAAI,cAAA,UAAI,wBACJJ,IAAAI,cAAC8B,EAAY,CAACX,SAAUA,IAAY,MCzB3BY,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAK1C,IAAkD,IAAjD,OAAE2C,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS/C,EACpE2C,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCCDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhD,IAAAI,cAACJ,IAAMiD,WAAU,KACfjD,IAAAI,cAAC4B,EAAG,QAORG,K","file":"static/js/main.50eb6a99.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction AddExpenseForm({ onAddExpense }) {\r\n  const [description, setDescription] = React.useState('');\r\n  const [amount, setAmount] = React.useState('');\r\n\r\n  const handleDescriptionChange = (event) => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  const handleAmountChange = (event) => {\r\n    setAmount(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Перевірка на пусті поля\r\n    if (!description.trim() || !amount.trim()) return;\r\n    \r\n    // Створення об'єкта нової витрати\r\n    const newExpense = {\r\n      description,\r\n      amount: parseFloat(amount)\r\n    };\r\n\r\n    // Виклик функції onAddExpense для додавання нової витрати\r\n    onAddExpense(newExpense);\r\n\r\n    // Очистка полів після додавання витрати\r\n    setDescription('');\r\n    setAmount('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Опис\"\r\n        value={description}\r\n        onChange={handleDescriptionChange}\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Сума\"\r\n        value={amount}\r\n        onChange={handleAmountChange}\r\n      />\r\n      <button type=\"submit\">Додати витрату</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddExpenseForm;\r\n","import React, { useState } from 'react';\r\nimport AddExpenseForm from './AddExpenseForm';\r\n\r\nconst ExpenseDate = (props) => {\r\n  // ... Код ExpenseDate остается прежним ...\r\n};\r\n\r\n// Удаляем компонент Card, если он больше нигде не используется\r\n\r\n// Компонент ExpenseItem без Card\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <div className=\"expense-item\"> {/* Теперь применяем стили card напрямую к этому div */}\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst Expenses = () => {\r\n  const [expenses, setExpenses] = useState([]);\r\n\r\n  const addExpenseHandler = (newExpense) => {\r\n    setExpenses(prevExpenses => [...prevExpenses, newExpense]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Expenses</h2>\r\n      <AddExpenseForm onAddExpense={addExpenseHandler} />\r\n      {expenses.length === 0 && <p>No expenses found.</p>}\r\n      {expenses.map((expense, index) => (\r\n        <ExpenseItem\r\n          key={index}\r\n          date={new Date(expense.date)}\r\n          title={expense.description}\r\n          amount={expense.amount}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n\r\n","import React from 'react';\nimport './styles.css'; // Подключаем файл стилей\nimport ExpensesList from './components/Expenses'; // Изменили имя компонента, чтобы избежать конфликта имён\n\n// Основной компонент приложения\nfunction App() {\n  // Данные о расходах\n  const expenses = [\n    {\n      id: 'e1',\n      title: 'Toilet Paper',\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    {\n      id: 'e2',\n      title: 'New TV',\n      amount: 799.49,\n      date: new Date(2021, 2, 12),\n    },\n    {\n      id: 'e3',\n      title: 'Car Insurance',\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: 'e4',\n      title: 'New Desk (Wooden)',\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  return (\n    <div>\n      <h2>My Expenses template</h2>\n      <ExpensesList expenses={expenses} /> {/* Обращаемся к компоненту ExpensesList */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './styles.css';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}